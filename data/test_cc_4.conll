0	1	money	money	NN	nsubj	4	b'O'	 (ROOT (S (NP (NN money))
0	2	is	be	VBZ	cop	4	b'O'	 (VP (VBZ is)
0	3	very	very	RB	advmod	4	b'O'	 (ADJP (RB very)
0	4	important	important	JJ	root	0	b'O'	 (JJ important)
0	5	in	in	IN	case	7	b'O'	 (PP (IN in)
0	6	our	we	PRP$	nmod:poss	7	b'O'	 (NP (PRP$ our)
0	7	life	life	NN	obl	4	b'O'	 (NN life)))))
0	8	.	.	.	punct	4	b'O'	 (. .)))

1	1	we	we	PRP	nsubj	3	b'O'	 (ROOT (S (NP (PRP we))
1	2	can	can	MD	aux	3	b'O'	 (VP (VP (MD can)
1	3	do	do	VB	root	0	b'O'	 (VP (VB do)
1	4	nothing	nothing	NN	obj	3	b'O'	 (NP (NN nothing))))
1	5	and	and	CC	cc	9	b'O'	 (CC and)
1	6	ca	can	MD	aux	9	b'O'	 (VP (MD ca)
1	7	n't	not	RB	advmod	9	b'O'	 (RB n't)
1	8	even	even	RB	advmod	9	b'O'	 (ADVP (RB even))
1	9	live	live	VB	conj	3	b'O'	 (VP (VB live)
1	10	on	on	IN	case	12	b'O'	 (PP (IN on)
1	11	without	without	IN	case	12	b'O'	 (PP (IN without)
1	12	money	money	NN	obl	9	b'O'	 (NP (NN money)))))))
1	13	.	.	.	punct	3	b'O'	 (. .)))

2	1	so	so	RB	advmod	4	b'O'	 (ROOT (S (ADVP (RB so))
2	2	some	some	DT	det	3	b'O'	 (NP (DT some)
2	3	people	people	NNS	nsubj	4	b'O'	 (NNS people))
2	4	think	think	VBP	root	0	b'O'	 (VP (VBP think)
2	5	money	money	NN	nsubj	7	b'O'	 (SBAR (S (NP (NN money))
2	6	is	be	VBZ	cop	7	b'O'	 (VP (VBZ is)
2	7	everything	everything	NN	ccomp	4	b'O'	 (NP (NN everything))))))
2	8	.	.	.	punct	4	b'O'	 (. .)))

3	1	with	with	IN	case	2	b'O'	 (ROOT (S (PP (IN with)
3	2	money	money	NN	obl	6	b'O'	 (NP (NN money)))
3	3	,	,	,	punct	6	b'O'	 (, ,)
3	4	they	they	PRP	nsubj	6	b'O'	 (NP (PRP they))
3	5	can	can	MD	aux	6	b'O'	 (VP (MD can)
3	6	buy	buy	VB	root	0	b'O'	 (VP (VB buy)
3	7	everything	everything	NN	obj	6	b'O'	 (NP (NP (NN everything))
3	8	they	they	PRP	nsubj	9	b'O'	 (SBAR (S (NP (PRP they))
3	9	want	want	VBP	acl:relcl	7	b'O'	 (VP (VBP want)))))))
3	10	.	.	.	punct	6	b'O'	 (. .)))

4	1	someone	someone	NN	nsubj	3	b'O'	 (ROOT (S (NP (NN someone))
4	2	even	even	RB	advmod	3	b'O'	 (ADVP (RB even))
4	3	gets	get	VBZ	root	0	b'O'	 (VP (VBZ gets)
4	4	money	money	NN	obj	3	b'O'	 (NP (NN money))
4	5	by	by	IN	mark	6	b'O'	 (PP (IN by)
4	6	stealing	steal	VBG	advcl	3	b'O'	 (S (VP (VBG stealing)
4	7	and	and	CC	cc	8	b'O'	 (CC and)
4	8	cheating	cheat	VBG	conj	6	b'O'	 (VBG cheating)))))
4	9	.	.	.	punct	3	b'O'	 (. .)))

5	1	of	of	RB	advmod	7	b'O'	 (ROOT (S (ADVP (RB of)
5	2	course	course	RB	fixed	1	b'O'	 (RB course))
5	3	,	,	,	punct	7	b'O'	 (, ,)
5	4	they	they	PRP	nsubj:pass	7	b'O'	 (NP (PRP they))
5	5	will	will	MD	aux	7	b'O'	 (VP (MD will)
5	6	get	get	VB	aux:pass	7	b'O'	 (VP (VB get)
5	7	punished	punish	VBN	root	0	b'O'	 (VP (VBN punished)
5	8	in	in	IN	case	10	b'O'	 (PP (IN in)
5	9	the	the	DT	det	10	b'O'	 (NP (DT the)
5	10	end	end	NN	obl	7	b'O'	 (NN end))))))
5	11	.	.	.	punct	7	b'O'	 (. .)))

6	1	so	so	CC	cc	4	b'O'	 (ROOT (S (CC so)
6	2	money	money	NN	nsubj	4	b'O'	 (NP (NN money))
6	3	can	can	MD	aux	4	b'O'	 (VP (MD can)
6	4	bring	bring	VB	root	0	b'O'	 (VP (VB bring)
6	5	us	we	PRP	iobj	4	b'O'	 (NP (PRP us))
6	6	not	not	RB	advmod	7	b'O'	 (NP (CONJP (RB not)
6	7	only	only	RB	cc:preconj	8	b'O'	 (RB only))
6	8	happiness	happiness	NN	obj	4	b'O'	 (NP (NN happiness))
6	9	,	,	,	punct	8	b'O'	 (, ,)
6	10	but	but	CC	cc	11	b'O'	 (CC but)
6	11	misery	misery	NN	conj	8	b'O'	 (NP (NN misery)))
6	12	also	also	RB	advmod	4	b'O'	 (ADVP (RB also))))
6	13	.	.	.	punct	4	b'O'	 (. .)))

